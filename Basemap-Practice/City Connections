import numpy as np
import matplotlib.pyplot as plt
import csv as csv
from mpl_toolkits.basemap import Basemap

# create new figure, axes instances.
fig=plt.figure()
ax=fig.add_axes([0.1,0.1,0.8,0.8])

# setup mercator map projection.
map = Basemap(llcrnrlon=-100.,llcrnrlat=20.,urcrnrlon=20.,urcrnrlat=60.,\
            rsphere=(6378137.00,6356752.3142),\
            resolution='l',projection='merc',\
            lat_0=40.,lon_0=-20.,lat_ts=20.)

# lat/lon of New York and London
# have an import file with [location name, lat, lon]
# import as csv, read into a table
nylat = 40.78; nylon = -73.98
lonlat = 51.53; lonlon = 0.08

# draw great circle route between NY and London
# have an import file with [Entity x, Entity y]
# import as csv, read into a table
# read through row by row, find entity listed in lat/lon import
# save those values as lat(x), lon(x). Repeat for lat(y), lon(y)
# ability to filter on one Entity and remake the map
	# search through column x, print with color blue?
	# search through column y, print with color red?
	# or give an option for the color (maybe all one)
map.drawgreatcircle(nylon,nylat,lonlon,lonlat,linewidth=1,color='b')

# add map colors
map.fillcontinents(color='coral',lake_color='aqua')
map.drawmapboundary(fill_color='aqua')

# draw parallels and maridians
map.drawparallels(np.arange(10,90,20),labels=[1,1,0,1])
map.drawmeridians(np.arange(-180,180,30),labels=[1,1,0,1])

ax.set_title('Connection Test')
plt.show()

# still needed
	# print values under the location
	# weight the thickness of the line?
	# auto zoom in-out based on the filter locations?
